from django.contrib.gis.db import models

from brubeck.personnel.models import Staffer

class Category(models.Model):
    name = models.CharField(max_length=150)
    description = models.TextField(blank=True, null=True)
    slug = models.SlugField(help_text="Used for URLs. Autogenerated from name.")

    objects = models.GeoManager()

    class Meta:
        abstract = True

    def __unicode__(self):
        return self.name

class ContentChannel(Category):
    priority = models.PositiveSmallIntegerField()
    is_archived = models.BooleanField('archived channel?', default=False, help_text="Is this content channel no longer being maintained because it's somehow outlived its usefulness?")

    objects = models.GeoManager()

    class Meta:
        abstract = True

    def __unicode__(self):
        return self.name

class Content(models.Model):
    pub_date = models.DateTimeField()
    is_published = models.BooleanField(default=False, help_text="Whether or not visitors can see this content. Uncheck if this content is still being edited.")
    byline = models.ManyToManyField(Staffer, blank=True, null=True, help_text="Use this if this content was the work of one or more normal staffers.")
    static_byline = models.CharField(max_length=255, blank=True, null=True, help_text="Use this in the case that this is contributed content (from a reader, a record label, a film studio, etc.). If there is a staffer byline, this static byline is ignored.")
    enable_comments = models.BooleanField('enable comments?', default=True, help_text="Uncheck this box to disable comments.")
    last_updated = models.DateTimeField(blank=True, null=True, auto_now=True, help_text="When this content was last updated. The site will automatically update this field whenever it is saved.")

    objects = models.GeoManager()

    class Meta:
        abstract = True
