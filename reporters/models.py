# Imports from Django
from django.db import models

# Imports from Brubeck
from brubeck.common.contact.models import Address, PhoneNumber
from brubeck.core.models import Category
from brubeck.core import imaging

class SourceType(Category):
    """
    Organizes sources into logical categories.
    """
    
    def __unicode__(self):
        return self.name
    def get_absolute_url(self):
        return '/reporters/sources/%s/' % self.slug
    
    class Meta:
        ordering = ['name']

class Source(models.Model):
    """
    Stores information about individual sources.
    """
    prefix = models.CharField(max_length=20, blank=True)
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=30)
    types = models.ManyToManyField(SourceType)
    org = models.CharField('organization', max_length=100)
    position = models.CharField(max_length=100)
    email = models.EmailField('e-mail address', blank=True)
    mugshot = models.ImageField(upload_to='%Y/%m%d/sources', blank=True)
    other_info = models.TextField(blank=True, help_text="Be civil. <strong>Assume the source can see this information.</strong>")
    slug = models.SlugField(help_text="Used for URLs. Autogenerated from name.")
    addresses = models.ManyToManyField(Address, blank=True, null=True)
    phone_numbers = models.ManyToManyField(PhoneNumber, blank=True, null=True)
    
    def __unicode__(self):
        return u'%s %s' % (self.first_name, self.last_name)
    
    class Meta:
        ordering = ['last_name', 'first_name']

class InfoPage(models.Model):
    title = models.CharField(max_length=100)
    description = models.TextField()
    body = models.TextField()
    slug = models.SlugField(help_text="Used for URLs. Autogenerated from title.")
    
    def __unicode__(self):
        return self.title
    def get_absolute_url(self):
        return '/reporters/info_pages/%s/' % self.slug
    
    class Meta:
        ordering = ['title']

